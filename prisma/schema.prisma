// Definição do datasource (banco de dados PostgreSQL)
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // A URL do banco de dados será definida no .env
}

// Gerador de cliente Prisma (acesso aos dados)
generator client {
  provider = "prisma-client-js"
}

// Modelo de usuário
model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  email     String     @unique
  password  String
  createdAt DateTime   @default(now()) // Data de criação
  updatedAt DateTime   @updatedAt // Data de atualização

  profile   UserProfile?
  quotations Quotation[]
  orders    Order[]
  @@map("users")  // Este é o nome exato da tabela no banco de dados

}


// Modelo de perfil do usuário
model UserProfile {
  id          Int      @id @default(autoincrement())
  userId      Int      @unique // Adiciona o atributo @unique aqui
  firstName   String
  lastName    String
  phone       String?
  address     String?
  city        String?
  state       String?
  country     String?
  postalCode  String?
  dateOfBirth DateTime?
  gender      String?

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Modelo de cotação
model Quotation {
  id        Int      @id @default(autoincrement())
  userId    Int
  partName  String?
  quality   String
  size      String   @default("Padrão") @db.VarChar(10) // Tamanho com valor padrão
  imageUrl  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  orders    Order[]
}

// Modelo de pedido
model Order {
  id             Int      @id @default(autoincrement())
  quotationId    Int
  userId         Int
  quantity       Int
  totalValue     Decimal  @db.Decimal(10, 2)
  paymentStatus  String   @db.VarChar(50)  // 'Pendente', 'Pago', 'Cancelado'
  orderStatus    String   @db.VarChar(50)  // 'Em andamento', 'Concluído', 'Cancelado'
  shippingAddress String?
  shippingMethod String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  quotation Quotation @relation(fields: [quotationId], references: [id], onDelete: Cascade)
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}
